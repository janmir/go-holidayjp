// sources:
// asset/1970-2050.json
// asset/en.json

package holidayjp

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _asset19702050Json = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x9d\xdd\x8e\x5c\xc7\x75\x85\xef\xfd\x14\x84\xae\x33\xc0\xa9\xbd\xf7\xe9\xae\xca\xab\x05\x01\x4c\xc5\xb1\x0c\x4b\x0e\xe4\x38\x52\x04\x09\x81\x2f\x42\xc7\x91\x60\x31\xb1\x15\x21\x80\x2c\x45\x0f\x43\x0e\xc9\xc7\x08\xba\xab\xba\x43\x87\xdd\xeb\x5b\x80\xee\x6a\x89\x7f\x7b\xcd\x74\xed\xef\x3b\xdd\xf3\x37\x3f\x79\xf2\xe4\xc9\x93\xf7\xda\x38\x6e\x0f\x5b\x7b\xd8\xda\x7b\x7f\xfd\xe4\xbd\xc7\xbf\xff\xbb\x57\xff\xfc\xbb\xf7\xfe\xea\x2f\xcf\xda\x7e\x3a\x7b\xf5\x8b\x8f\x5f\x7e\xf7\xdd\x8b\xa7\xcf\xdf\x49\xc4\x43\x9b\xff\xf7\x9f\xbf\x7b\xfc\xe2\x87\x37\xff\xfe\xd9\xe3\x8f\xdf\xde\xca\xe5\x43\x9c\x73\xaf\x3e\xfb\xdd\xe3\x2f\x7e\x7e\x2b\x51\x0f\x31\xce\xbf\xd2\xb3\x2f\x5f\x7f\xfe\xc1\x9b\xaf\x3e\x79\xfd\x4f\xbf\x7d\x27\xb4\x3f\x6c\x79\xfe\x65\x7e\xfe\xa7\x57\xdf\x7c\x32\x7f\xbb\x5b\xa1\xf3\x9f\xfa\xc5\xd3\xdf\xbc\x78\xfa\xe5\x8b\xf7\xdf\xbf\xf5\xdb\x8d\xcb\x5f\xed\x93\x3f\xbc\xf9\xe9\xd3\xdb\x89\x38\xff\x5e\xaf\x7f\xff\xe1\xed\x3f\x72\x3b\xfd\x77\x4a\xbc\xfc\xe1\x37\x6f\xde\xff\xd3\xad\x44\xbb\xfc\x79\x3f\xfd\xe0\xf1\xa3\x4f\x6f\x27\xe6\xef\xf2\xf8\xe1\xb3\xc7\x5f\xfe\xd7\xab\x9f\xfd\xf6\xcd\x1f\xfe\xe5\x9d\x5c\x13\x63\x6a\x38\xa6\x66\x8e\xa9\xe1\x98\x9a\x33\xa6\xe6\x8c\xa9\x39\x63\x6a\x38\xa6\x73\x22\x4a\x8c\xa9\xe1\x98\x1a\x8e\xa9\x99\x63\x0a\x31\xa6\xc0\x31\x85\x39\xa6\x38\x8f\x69\x13\x63\x0a\x67\x4c\xe1\x8c\x29\x9c\x31\x05\x8e\x29\xf0\xab\x29\x70\x4c\x81\x63\x0a\x73\x4c\x29\xc6\x94\x38\xa6\x34\xc7\x94\xf8\xd5\x94\xce\x98\xce\xa1\x9c\xd3\xfe\xe8\x3f\x5e\x7d\xf1\xe3\xcb\xef\x7f\xfd\x4e\x82\x07\x99\xce\x20\x13\x07\x99\x38\xc8\xfc\xbf\xaf\xc8\xbb\x7f\x5e\x1a\x75\xe2\xa8\xd3\x1c\x75\x89\x51\x17\x8e\xba\xcc\x51\x17\x8e\xba\x9c\x51\x97\x33\xc8\x72\x06\x39\x43\x07\x31\x84\xc2\x51\xcf\x04\xfe\x1a\xb2\x0c\x85\xa3\x2e\x1c\xf5\x4c\xa8\x42\x95\x59\x86\x5d\x94\x61\xc7\x32\xec\x66\x19\x76\x2c\xc3\xee\x94\x61\x77\xca\xb0\x3b\x65\xd8\x71\xd4\x3b\xbe\x8a\xee\x38\xc8\x1d\x07\xb9\xdb\x63\x3a\xe5\xd4\xc0\x0f\x62\x90\x07\x1c\xe4\xc1\x1c\xe4\x01\x5f\x67\x0f\xce\x20\x0f\xce\x20\x0f\xce\x20\x0f\x38\xc8\x03\x7e\x45\x1e\x70\x90\x33\xd1\xe4\x3f\x3f\x8d\xfa\x60\x8e\xfa\x28\x06\x79\xc4\x41\x1e\xcd\x41\x1e\xf1\x2b\xf2\xe8\x0c\xf2\xe8\x0c\xf2\xe8\x0c\xf2\x88\x83\x3c\xe2\x20\x8f\x38\xc8\x23\x8e\xe9\x68\x8e\xa9\x8b\x31\xcd\xb3\x10\x75\xe9\x38\xc8\x99\x50\x2f\x35\xdd\x1c\x75\xc7\x51\x77\x67\xd4\xdd\x19\x75\x77\x46\xdd\x71\xd4\x1d\x47\xdd\x71\xd4\x1d\x47\xdd\xcd\x51\x0f\x31\xea\x81\x83\x1c\xe6\x98\x66\x4e\x95\x66\xe0\x20\x87\x33\xc8\x81\xb7\xe7\xe1\x8c\x7a\x38\xa3\x1e\x38\xea\x81\xaf\xb3\x03\x47\x3d\x70\xd4\xc3\x1b\x75\x17\xec\xa7\x23\xfb\xe9\x26\xfb\xe9\x1b\xbd\x8a\x76\x87\xfd\x74\x87\xfd\x74\x87\xfd\x74\x64\x3f\x1d\xd9\x4f\x47\xf6\xd3\x91\xfd\x74\x93\xfd\xac\x9c\xb8\x0e\x75\x41\x87\x3a\xd2\xa1\x6e\xd2\xa1\x8e\x74\xa8\x3b\x74\xa8\x3b\x74\x68\x85\xe0\xef\xcc\xa3\x46\x7e\x34\x13\x72\xd4\xc8\x8f\x3a\xf2\xa3\x6e\xf2\xa3\x2e\xf8\x51\x47\x7e\xd4\x4d\x7e\xd4\x03\x07\x39\x13\xe2\xdb\x73\x77\x08\x53\x77\x08\x53\x77\x08\x53\x47\xc2\xd4\x91\x30\x75\x24\x4c\x2b\x21\x6e\xbe\x1d\x19\x54\x37\x19\x54\x17\x0c\xaa\x23\x83\xea\x26\x83\xea\xc8\xa0\xba\xc3\xa0\xba\x43\x98\xba\x43\x98\x3a\x12\xa6\x8e\x84\xa9\x23\x3f\xea\xc8\x8f\xba\xc9\x8f\xba\xe0\x47\xeb\x4c\x7d\x95\x20\x61\x5a\x09\x71\xf3\xed\x26\x83\xea\x85\xaf\xb3\x0e\x83\x9a\x21\x75\x61\xea\x0e\xa5\xea\x0e\xa5\xea\xc8\xa0\x3a\x12\xa6\x95\x50\xaf\x14\xc8\xa0\x3a\x32\xa8\x6e\x12\xa6\x2e\x08\x53\x47\xc2\xd4\x4d\xc2\xd4\x91\x30\x75\x87\x30\x75\x87\x30\x75\x87\x30\xad\x90\x6a\x31\x32\xa8\x95\xc0\x5f\x43\x96\x01\x29\x55\x47\x4a\xb5\x12\xaa\x50\x26\xc7\xea\x82\x52\x75\xa4\x54\xdd\xa4\x54\xfd\x80\x65\x70\x28\x55\x77\x28\x55\x77\x28\x55\x47\x4a\xd5\x91\x52\x75\xa4\x54\x1d\x19\x54\x37\x19\xd4\xca\xa9\x81\x0b\x4a\xd5\x91\x52\x75\x93\x52\x75\xa4\x54\xdd\xa1\x54\xdd\xa1\x54\x2b\x04\x7f\x67\x1e\x35\x72\xac\x8e\x1c\xab\x23\xc7\xea\xc8\xb1\xba\xc9\xb1\xba\xe0\x58\x1d\x29\x55\x37\x19\x54\xef\xf8\x4a\xfc\x36\xa5\xba\xfd\xcf\xef\x50\xaa\xee\x50\xaa\x15\x3a\x8f\xfa\xf1\x8b\x1f\x5e\xfd\xe7\xaf\x5f\x3c\x7d\x7e\xeb\xb7\xe3\x69\x23\xca\xea\x88\xb2\x3a\xa2\xac\x8e\x28\xab\x9b\x28\xab\x0b\x94\xb5\xce\xd4\xdd\x0d\x61\xd7\x4a\xa8\x57\x2c\x13\x87\xcd\xdc\xfa\x16\xf4\xd9\xd7\x8f\xff\xf8\xd1\x9c\xf9\x8b\xa7\xcf\x1f\x9f\xfd\xfe\xf1\xd3\xaf\x5e\x3c\x7d\xfe\xfa\xd9\xf7\x7f\xf9\x3f\xc0\xf7\x8a\xb7\xe8\xd8\x8b\xa7\x3f\x9e\x27\xfa\xcb\x5b\x21\x2e\xd0\x70\x0a\xe4\x00\xb2\x8e\x80\x6c\x26\x64\x81\x10\x90\x75\x04\x64\xdd\x05\x64\xe3\xa1\xc5\x25\x77\xef\x8b\x70\x08\x8a\x36\x90\xa2\x0d\x93\xa2\xad\x9c\xe8\xeb\xc0\x67\xac\xc6\x66\x54\x62\x86\xd4\xfd\x7f\x38\x24\x6e\x85\x74\x69\x86\x83\xeb\x06\xe2\xba\x81\xb8\x6e\x25\xc4\xcb\xdd\x40\xa0\x37\x10\xe8\xcd\xc4\x9c\xd1\xe3\xaf\xbe\x79\xf9\xc3\xaf\x5e\x3f\xfb\xfe\xd5\xd7\xff\xfa\xea\xf9\x8f\xa7\x2f\xe4\x9f\xfd\xf4\xff\x47\xb9\x81\xa7\x9c\xd3\xc0\x16\xfa\x6f\x27\x00\xe1\x40\x40\x38\x4c\x40\x38\x10\x10\x8e\xe6\x34\xd0\x01\x84\xa3\x39\xfd\x72\x18\xe1\x0a\x89\xef\xe2\x03\x29\xe2\x4a\xe0\xaf\x21\x3b\x8a\x9c\x71\x20\x67\x5c\x09\xdd\x04\xaf\x78\xcd\x29\x9e\xc0\x95\x03\x71\xe5\x30\x71\xe5\xc0\xc7\xdd\x46\x38\xb5\x72\x60\xe4\x0a\xa9\x7f\x40\x07\x57\x0e\xc4\x95\x03\x71\xe5\x40\x5c\x39\x10\x46\x0e\x13\x46\x9e\x72\x3c\x6d\x41\x2c\x07\x12\xcb\x61\x12\xcb\x91\x38\xed\x74\xa6\xed\x10\xcb\x15\x82\x6f\x22\x0e\xd6\x3c\x85\x4e\x4b\xed\x79\x9c\x9f\x7f\xf0\xf8\xec\xab\xc7\xaf\x3f\x7e\xfc\x9f\x6f\x5e\xfe\xf9\xe9\x9b\x7f\xfb\xea\xf5\x3f\x7c\x78\xba\xc0\x7d\xfb\xf1\xe3\x97\x9f\xbf\xf3\x4a\x80\x40\x74\x20\x10\x1d\x08\x44\x57\x42\x2c\x1c\x03\x91\xe9\x30\x91\xe9\x29\xc7\x65\x12\x5c\x75\x20\x35\x1d\x26\x13\x1d\xf8\x5c\xde\x28\xa7\x4c\x0e\xf1\x5c\x21\x28\x93\x83\x45\x07\x62\xd1\x81\x58\x74\x20\xf4\x1c\x08\x3d\x87\x09\x3d\x4f\x39\x1e\xb8\x20\xa3\xeb\x4c\x5d\x6e\x91\x9d\xae\x84\x7a\x09\x36\xe9\xea\x40\xba\x3a\x76\xa7\x34\x0e\x5d\x5d\x21\x28\x8d\x83\x60\x07\x02\xd6\x81\xf8\x74\x20\x3e\x1d\x88\x4f\x87\x09\x47\x4f\x39\x2e\x8d\x20\xa8\x03\x09\xea\x30\x09\xea\xca\xa9\xfa\xe1\x93\x80\xe3\xe0\x54\xc2\x61\xac\x2b\x04\x95\x70\x40\xec\x0a\xa9\x2f\x89\xc3\xc3\x76\xbc\xfc\xbd\xbe\xfd\xef\x5b\xbf\x00\x74\xea\x80\x17\x5f\x64\xbd\x03\x59\xef\x40\xd6\xbb\x12\xea\xde\x66\xd2\xe0\x53\x8e\x7b\x29\x80\xf0\x40\x20\x3c\x4c\x20\x3c\x8e\xd8\xba\xa3\xd3\x3a\x07\x08\x0f\x07\xf7\x9e\x42\xaa\x2e\xf3\x58\x5d\x32\x90\x17\x0f\xe4\xc5\x03\x79\xf1\x40\x5e\x3c\x4c\x5e\xbc\x72\xaa\x56\x47\xa7\x2e\x02\x3b\x0f\xc4\xce\xc3\xc4\xce\x03\x1f\x7d\x1c\xdd\xa9\x8b\x03\x95\x47\xc7\x3d\xc9\x21\xca\xa7\x90\x2a\x14\x02\xe7\x81\xc0\x79\x20\x70\x1e\x08\x9c\x87\x09\x9c\x4f\x39\x2e\x83\xa0\xd2\x03\x99\xf3\x30\x89\xf2\x40\x40\xbc\x12\xea\x55\xcf\x41\xc8\xc3\x41\xc8\xc3\x41\xc8\xc3\x41\xc8\xa7\x90\x6a\x0c\x12\xe6\x81\x84\x79\x20\x61\x5e\x09\xf5\x8d\x0e\x19\xf4\x30\x19\xf4\x60\x06\x1d\xdb\x76\x97\x41\x5f\xce\xe6\x5f\xe7\x56\xa7\x66\x82\x3b\x35\x73\xea\xf5\x68\x26\xa0\x31\x33\x04\x8d\xb9\x86\x54\x63\xae\x21\xd5\x98\x19\xba\xdb\x98\x79\xac\x1a\x73\x49\xdc\x6f\xcc\x39\xd1\xb6\xb5\xfd\xdf\x6a\xcc\x4c\xa8\x3e\x5c\x12\xd4\x87\x99\xe3\x3e\xdc\xe5\xbd\xd7\xb3\x2e\xfa\x60\xf1\xde\x6b\xee\xee\x77\x90\x99\x80\xc6\x30\x11\xbe\x84\xee\x3b\x89\x99\xe0\x4e\x31\x33\xbe\x86\xa0\x53\x4d\x77\x0a\x80\xf1\x25\x21\x3b\xd5\xb4\xb2\x38\x27\x4e\xad\xeb\xa2\x75\x00\x8c\x2f\x09\xa3\x75\x8c\x83\xaf\x21\xf5\x47\xbe\x0b\x8c\x2f\x67\xad\x44\x2f\x2d\x60\x3c\x73\xea\xb5\x6f\x26\xb8\x75\x0c\x8c\xaf\x21\xe8\x14\x33\xe3\x6b\xe8\xee\x2a\x35\x13\xaa\x75\x00\x9d\xaf\x09\xf8\x2d\xa0\x97\x13\x4b\x97\x68\x1d\x60\xe9\x6b\x42\x17\xc5\xeb\x25\x83\xeb\xd8\xb6\xbb\xe0\xfa\x72\xd6\x52\xb4\xce\x02\xd7\x33\x07\xad\x63\x70\x3d\x43\xdc\x3a\x66\xd2\x33\x74\x5d\xc7\x6e\xd4\x05\xc0\xf3\x25\x21\xcb\x30\xb1\x72\x8a\x32\x00\x56\xbe\x24\x8c\x51\xa7\xde\xc5\x66\x82\xcb\x70\x17\x3c\x5f\xce\xd6\x0b\xda\xed\x32\x58\xe0\x79\xe6\xe0\x85\x8f\xc1\xf3\x0c\x71\x19\x18\x3c\x5f\x43\xd0\x98\x3a\x35\xa6\x8d\x7b\x8d\x99\xd4\x79\x13\x8d\x01\x2e\x7d\x4e\x5c\xaf\xce\x77\x1a\x03\x5c\xfa\x92\x30\x1a\xc3\x5c\x3a\xb6\xed\x2e\x97\xbe\x9c\xc9\xab\xb3\xc5\x94\x67\x0e\xfa\xb0\xeb\x47\xc2\x66\x82\x1b\xc3\xd4\xf9\x1a\x82\xc6\x30\x75\x9e\xa1\xe3\x43\xeb\xf7\x1a\x33\xa1\xf4\x10\x8d\x01\x28\x7d\x4e\xc8\x75\x6c\x26\xa0\x31\x16\x94\x9e\x39\x6e\xcc\x5d\x28\x7d\x3d\x53\x57\xe2\x99\x18\xa2\x53\x16\xb6\x9e\x39\x78\xc1\x61\x28\x3d\x43\xdc\x18\x86\xd2\xd7\x10\x34\xe6\x8c\x9c\xdb\xf1\x5e\x63\x26\x50\xee\xa2\x31\x00\x94\xcf\x09\x5a\xc7\x00\x28\x5f\x12\x46\x63\x18\x17\xc7\xb6\xdd\xc5\xc5\xd7\x33\xb5\x8e\x59\xb8\xf8\x9a\x53\xdd\x83\x27\x8c\x67\xe2\xd2\x98\xf9\x20\xe2\xed\x84\xdc\xc5\x98\x37\x5f\x43\xa5\xab\xc9\x50\x7a\x86\x8e\x97\x4b\xed\x8d\x42\x4d\xe4\x7c\x14\x85\x02\xe4\x7c\x4d\xa8\xab\xc7\x11\x77\x31\x80\xd2\x97\x84\x51\x39\x46\xce\xd7\x90\xfa\x23\xdf\x85\xd2\x97\x33\xb9\x8b\x59\x50\x7a\xe6\xe0\x85\xaf\x63\xe5\x98\x48\x5f\x43\x50\x28\x86\xd2\xd7\x90\xda\x92\xba\xbe\x59\x03\xb6\xbe\x24\x64\xe5\x3a\xde\xac\x01\x5b\x5f\x12\x46\xa1\x3a\xde\xac\x19\x6c\xc7\xb6\xdd\x05\xdb\x97\x33\x79\xb3\xb6\xc0\xf6\xcc\x41\xa1\x06\x16\x8a\x99\xf5\x35\x04\x85\x62\x66\x7d\x0d\xa9\x42\x29\xaa\x3d\x8f\xc7\xa5\x6f\xb7\x0b\x35\x13\xa1\x5f\x9f\x01\x7d\x9f\x13\xa7\xd6\x85\x68\x1d\x80\xed\x4b\xc2\x68\x9d\x03\xb6\x9b\x00\xdb\xf3\x6c\x51\xf8\x9b\x9d\x6a\x26\xd8\x6e\xf0\xe8\xf4\x35\x21\x5e\x5b\xdb\x46\xad\x6b\x0e\xf7\x6e\x9b\xd1\xba\xe6\x70\xef\xb6\xc9\x65\xae\x6d\xb4\xcc\x35\xe4\xde\x6d\xa3\x65\xae\x21\xf7\x6e\x26\xf7\x6e\x0e\xf7\x6e\x82\x7b\xcf\x33\xb5\xcc\x35\x93\x7b\x37\x78\xce\x79\x26\xa0\x0c\x0e\xb0\x6e\xcd\x29\x83\x03\xac\x5b\x93\x7b\x5a\x6b\xb4\xa7\x35\x04\xd6\x0d\x9e\x5f\x9e\x09\x28\x83\x89\xa3\x9b\x83\xa3\x9b\x80\xcd\xeb\x4c\x7d\x3d\x07\xed\x69\xcd\xc4\xd1\x0d\x9e\x5f\x9e\x09\xa8\x4b\xd0\xad\xbb\x39\xb4\xba\x85\x53\x28\x87\x56\xb7\x90\xb7\xee\x16\x74\xeb\x9e\x89\xf9\x1d\xf5\x4e\xa1\x82\xee\xd4\x0d\x49\x73\x33\x39\x72\x73\x38\xf2\x0a\x89\x7b\x52\x13\xa4\x79\x9e\xa9\x3b\x75\x33\x49\x73\x83\x47\xa4\x67\x02\x0a\xe5\x60\xe6\x96\x4e\x5d\x1c\x16\xbd\x42\xe2\x0a\xd4\xce\xb4\x7a\x5d\x9a\x6f\x14\x2a\xdf\x52\x17\xb7\x0b\x85\xb4\xba\x25\xa9\x8b\x86\xb4\x7a\x25\x74\x07\xbc\xca\x39\xb4\xba\x09\x5a\x3d\xcf\x94\xba\x68\x26\xad\x6e\xf0\x98\xf4\x4c\x40\xa1\x1c\x54\xdd\xca\x29\x94\x83\xaa\x1b\x7c\xc0\xe9\x4c\x88\x25\xad\xc1\x43\xd6\x97\x84\x2c\x54\xd1\x92\xd6\x10\x66\x37\x13\x66\xaf\x9c\x2a\x9e\x83\xbb\x9b\xc0\xdd\xf3\x4c\x2d\x69\xcd\xc4\xdd\x0d\x1e\xa1\x9e\x09\x28\x94\x43\xb2\xdb\xee\x14\xca\x21\xd9\x0d\x3e\xc2\x62\x26\xc4\x92\xd6\x76\x5a\xd2\x56\x42\x2f\x69\x0d\x81\x78\xdb\x69\x49\x6b\x08\xc4\x9b\x09\xc4\x9b\x03\xc4\x9b\x00\xe2\xf3\x4c\x2e\x69\x26\xee\x6e\xf0\x0c\xf6\x35\x21\x14\x4a\x3b\x60\xeb\x1c\x1a\xde\x0e\x4e\xeb\x1c\x1a\xde\x0e\xfa\x5e\x7e\x78\x38\xc3\x99\xf3\xbf\xcd\x1f\xff\x78\xeb\x18\xae\xed\x07\xbc\x65\xc1\xd3\xd7\x33\x01\x6d\x32\x61\x79\x73\x60\x79\x13\xb0\x7c\x9d\xa9\x6b\xfb\x11\xaf\xed\x26\x4e\x6f\xf0\xf4\xf5\x4c\x40\x9b\x1c\x14\xde\x1c\x14\xde\x1c\x14\xde\x8e\xd2\xad\x9c\x8e\x55\x9b\x8e\xa4\x5e\x1a\x92\xf2\x76\x24\xf5\xd2\x90\x83\x37\x93\x83\x37\x87\x83\x37\x41\xb9\xd7\x99\x50\x2f\xcd\xa4\xdc\x2b\x17\x4e\x0e\x5e\x17\x91\x86\xcf\xc4\x5a\x05\xef\x26\xb8\x75\x0e\x2f\x6f\x0e\x2f\x6f\x5d\xaf\x82\x5d\xb7\xae\xe3\xa6\x88\xb0\x7c\x25\xee\x7e\xac\xea\x39\x41\xbb\x24\xe2\xf4\x66\xe2\xf4\xe6\xc0\xf2\x15\x2a\x1d\x12\x44\x7d\x9e\xc9\x75\xd2\x24\xea\x0d\x1e\x15\x9f\x09\x28\xa5\x43\xd4\x9b\x43\xd4\x9b\x43\xd4\xdb\x5b\x44\x5d\x86\xd4\x46\x39\x74\x2f\xe7\x71\x88\x63\xd8\x47\x91\xb6\xb7\x81\xfb\x28\xd2\xf6\x95\x28\x4a\x18\xb5\x75\x78\x7c\x08\x1e\x3f\xcf\xd4\x3e\x1a\x26\x8f\x0f\x7c\xd0\x3c\x90\xb6\x87\x43\xdb\xc3\xa1\xed\xe1\xd0\xf6\x15\xd2\x8d\x0c\xfd\x28\xfa\xe9\x58\x34\x32\x36\x5a\x30\x56\x42\xdc\xf6\x62\xa3\xdd\x21\x90\xd8\x87\x49\xec\xc3\x21\xf6\x21\x88\xfd\x3c\x53\xbb\x43\x98\xc4\x3e\xf0\x39\xf4\x40\x62\x1f\x0e\xb1\x0f\x87\xd8\x87\x43\xec\xa3\x49\x7d\x73\x3a\x56\x5d\x69\x64\x77\x02\x81\x7e\x34\xb2\x3b\x81\x40\x3f\x4c\xa0\x1f\x0e\xd0\x0f\x01\xf4\xe7\x99\xb2\x3b\x61\xe2\xfa\xc0\xa7\xc7\x03\x71\x7d\x38\x30\x3e\x1c\x18\x1f\x0e\x8c\x8f\x90\x5b\xe4\xe9\x58\x75\x25\x68\x8b\x0c\x7c\x2a\x3c\xe0\xc3\x4a\x66\x02\xba\x62\xb2\xfa\x70\x58\x7d\x08\x12\xbf\xce\x42\x9c\x89\xfd\x31\x4c\x4a\x1f\xf8\x3c\x78\x20\xa5\x0f\x87\xd2\x87\x43\xe9\xc3\xa1\xf4\x91\x72\x7f\x3c\x1d\xab\x1e\x25\xed\x8f\x81\x88\x3e\x92\xf6\xc7\x40\x44\x1f\x26\x80\x0f\x07\xc0\x87\x00\xf0\xeb\x4c\xec\x8f\x61\x02\xf8\x95\xc3\xfd\x31\xf0\xb1\xf2\x40\x50\x1f\x0e\xa8\x0f\x07\xd4\x87\x03\xea\xa3\x9c\x8b\x51\xc9\xab\xfa\xe9\x58\x15\xaf\xe4\x55\x3d\x8a\xae\xea\x33\x21\xef\x4d\xe8\x02\xa2\xe8\x32\x1f\xe8\x02\xa2\xe8\x32\x1f\xa6\x2d\x08\xc7\x05\x84\x70\x01\xf3\x4c\x5e\xe6\x4d\x17\x10\xf8\xe8\x7b\xa0\x0b\x08\xc7\x05\x84\xe3\x02\xc2\x71\x01\xb1\x3b\x9d\xdd\xa5\x5f\x3a\x1d\xab\xce\xc2\xc7\xb5\x5c\x12\xb2\x72\x3b\xe9\xa7\x40\x11\x10\xa6\x08\x88\xb7\x7e\x26\x1b\xe5\xb8\x78\x42\x18\xcc\x33\x25\xa1\xc2\x14\x06\x81\xc2\x20\x50\x07\x84\xa3\x03\xc2\xd1\x01\xe1\xe8\x80\x38\x38\xc5\x53\x1f\xda\x32\x8f\x55\xf1\x0e\xb8\x45\x1e\x0c\x4d\x15\xf8\x14\x7e\x1c\x70\xd5\x44\xb1\x10\xa6\x58\x08\x47\x2c\x84\x10\x0b\xf3\x4c\xae\x9a\xa6\x36\x08\x7c\xc6\x7e\x25\x42\x27\xa0\x97\x8e\x58\x08\x47\x2c\x84\x23\x16\xe2\xa8\x97\x51\x2d\x16\xe2\x88\xcb\x28\x8a\x85\x38\xe2\x32\x8a\x62\x21\x4c\xb1\x10\x8e\x58\x08\x21\x16\xe6\x99\x5c\x46\x4d\xb1\x10\xf8\xf8\x7c\xa0\x30\x08\x47\x07\x84\xa3\x03\xc2\xd1\x01\xd1\xf5\x12\xa1\x75\x40\x74\x5c\x22\x3a\x5e\xd6\x3a\x2e\x11\x08\xfb\xc3\x84\xfd\xe1\xc0\xfe\x10\x1c\x7f\x9d\xa9\x25\xc2\xe4\xf8\x31\xcc\x25\x02\x9f\xa0\x0f\xe4\xfd\x31\x48\x42\x85\x63\x04\xc2\x31\x02\xe1\x18\x81\x18\x52\x42\x85\x86\xfd\x31\x48\x42\x05\xd2\xfc\x80\x9f\xed\x77\x4e\x80\x84\x0a\xe4\xfd\x61\xd2\xfc\xb0\x68\xfe\x30\x24\x54\x0a\xe4\x3f\xcf\x94\x84\x4a\x13\xf9\x27\x22\xff\x44\xe4\x9f\x0e\xf2\x4f\x07\xf9\xa7\x83\xfc\xd3\x41\xfe\xb9\xc9\xcd\x36\x35\xf2\x5f\xc7\xf7\x36\xdb\xdc\x68\xb3\x4d\x7c\x86\x3f\x37\xda\x5b\x13\x8d\xc0\x4a\x88\xbd\x35\x4d\x67\x90\x8e\x33\x48\xe1\x0c\xe6\x99\xda\x5b\xd3\x74\x06\x89\x4f\xf9\x27\x3a\x83\x74\x9c\x41\x3a\xce\x20\x1d\x67\x90\xcd\x69\x64\x93\x7b\x6b\x6a\xb1\x90\xf8\xd1\x36\x89\x62\x21\x1b\xed\xad\x89\x62\x21\x4d\xb1\xb0\x72\xb8\xb7\xa6\x23\x20\x52\x08\x88\x79\xa6\xf6\xd6\x34\x05\x44\xe2\xfb\x05\x12\x05\x44\x3a\x02\x22\x1d\x01\x91\x8e\x80\xc8\x90\xfb\x41\x6a\x01\x91\x41\xfb\xc1\x4a\x34\xb9\x92\x26\xbe\xa3\x20\x83\x96\x88\x44\x4b\x91\xa6\xa5\x48\xc7\x52\xa4\xb0\x14\xf3\x4c\x2d\x11\x69\x9a\x88\xc4\xf7\x0b\x24\xba\x8a\x44\x57\x91\x8e\xab\x48\xc7\x55\xa4\xe3\x2a\x32\xa5\xf3\x4a\xed\x2a\x32\xc9\x79\x25\xba\x8a\x84\x4f\x5d\x9f\x09\x68\x93\xe9\x2a\xd2\x71\x15\x29\x5c\x45\xd6\x7d\xe7\xb5\xce\x84\xf3\x4a\xd3\x63\x24\xfa\x89\x44\x3f\x91\x8e\x9f\x48\xc7\x4f\xa4\xe3\x27\xb2\xe4\xba\x9a\x5a\x3d\x64\xd1\xba\x9a\x68\x0e\xb2\x68\x5d\x4d\x34\x07\x69\x7a\x81\x74\xbc\x40\x0a\x2f\xb0\xce\xc4\xba\x9a\xa6\x17\x58\x39\x5c\x57\x13\xdf\x4b\x90\xe8\x0f\x66\x42\xad\xab\xe9\x18\x86\x74\x0c\x43\x3a\x86\x21\x77\xb9\xae\xa6\x96\x07\xb9\xd3\xba\x9a\x28\x0f\x56\x42\xac\xab\xb9\xd3\xba\x9a\xa8\x17\xd2\xd4\x0b\xe9\x68\x83\x15\x82\x75\x55\xb8\x85\x79\x26\xd7\x55\xd3\x2d\x24\xba\x85\x44\xb7\x90\x8e\x5b\x48\xc7\x2d\xa4\xe3\x16\xd2\x71\x0b\x79\xd0\xcb\x81\x76\x0b\x09\x9f\x17\x7f\x49\xc8\x3b\xda\x01\x97\x03\xd4\x06\x69\x6a\x83\x3c\x98\xcb\x81\xa3\x17\x52\xe8\x85\x79\x26\x97\x03\x53\x2f\x24\xbe\x2b\x21\x51\x1e\xa4\x23\x0f\xd2\x91\x07\xe9\xc8\x83\x15\x82\xe2\xa9\x8f\x96\x9f\xc7\xaa\x78\x47\x92\x5a\x2b\xa1\xa5\x56\xa2\x86\xc8\x23\x49\xad\x44\x0d\x91\xa6\x86\x48\x47\x43\xa4\xd0\x10\xf3\x4c\x49\xad\x34\x35\x44\xa2\x86\x48\xd4\x10\xe9\x68\x88\x74\x34\x44\x3a\x1a\x22\xbb\x5e\x49\xb5\x86\xc8\x8e\x2b\x29\xbe\x2b\x21\x3b\x6e\x9b\xa8\x21\xd2\xd4\x10\xe9\x68\x88\x14\x1a\x62\x9e\xc9\x6d\xd3\xd4\x10\x89\x6f\x27\x48\xd4\x0b\xe9\xc8\x83\x74\xe4\x41\x3a\xf2\x20\x87\xde\x25\xb5\x3c\xc8\x81\xbb\x24\xca\x83\x84\xcf\x9c\x9f\x09\xe8\x8a\xa9\x06\xd2\x51\x03\x25\xa8\xff\x3a\xbb\xb9\x4b\xae\x33\xb1\x4b\x96\x69\x04\x0a\x8d\x40\xa1\x11\xa8\x8d\xee\xfd\xe5\x38\x83\x72\x9c\x41\x39\xce\xa0\x36\x79\xef\x2f\xad\x03\x6a\xa3\x7b\x7f\xe1\x3b\x00\x6a\xa3\x5b\x7d\x21\xef\x2f\x93\xe6\x97\x43\xf3\x6b\x33\x6e\xf5\x25\x90\xff\x3c\x53\xb7\xfa\x32\x91\x7f\xe1\xdb\x04\x0a\x91\x7f\x39\xc8\xbf\x1c\xe4\x5f\x0e\xf2\x2f\x07\xf9\x57\x93\x12\xaa\x34\xf2\x5f\xc7\xf7\x24\x54\x35\x92\x50\x85\x46\xa0\x1a\x49\xa8\x42\x23\x50\x8d\x24\x54\x99\xce\xa0\x1c\x17\x50\xc2\x05\xcc\x33\x25\xa1\xca\x74\x01\x85\x2e\xa0\xd0\x05\x94\xe3\x02\xca\x71\x01\xe5\xb8\x80\x0a\xa7\x91\x21\xf7\xcc\xd2\xc2\xa0\xf0\x93\xee\x0b\xdf\xb1\x50\x41\x7b\x66\xa1\x0b\x28\xd3\x05\xac\x1c\xee\x99\xe5\x38\x83\x12\xce\x60\x9e\xa9\x3d\xb3\x4c\x67\x50\x68\x04\x0a\x8d\x40\x39\x46\xa0\x1c\x23\x50\x8e\x11\xa8\x74\x8a\x97\x72\xcf\x2c\xad\x0d\x2a\x69\xcf\x5c\x09\xbd\x67\x16\xba\x85\x4a\xda\x33\x0b\xdd\x42\x99\x6e\xa1\x1c\xb7\x50\xc2\x2d\xcc\x33\xb5\x67\x96\xe9\x0f\x0a\xfd\x41\xe1\x47\x15\x15\x1a\x86\x72\x0c\x43\x39\x86\xa1\x1c\xc3\x50\x25\xb7\x8b\xd2\x86\xa1\x8a\xb6\x8b\xc2\x77\x2f\x14\xfc\x30\xd8\x99\x80\x36\x99\x86\xa1\x1c\xc3\x50\xc2\x30\xd4\x2e\xb6\x8b\x1d\xb7\x0b\xd3\x3e\x14\xbe\x2b\xa1\xd0\x2a\x94\xe3\x0c\xca\x71\x06\xe5\x38\x83\xda\xa5\xa9\x2a\xed\x0c\x6a\x27\x53\x55\x3b\xf6\x68\x27\x53\x55\x68\x04\xca\x34\x02\xe5\x18\x81\x12\xb0\x7f\x9d\x09\x53\x55\x26\xec\xaf\x83\x67\xaa\x0a\xa5\x40\xa1\x14\x98\x09\xb9\xb1\x3a\xda\xa0\x1c\x6d\x50\x8e\x36\xa8\x83\xde\x58\xb5\x11\xa8\x03\x6e\xac\xf8\x46\x82\x95\x10\xa6\xaa\x0e\xb8\xd3\xa2\x33\x28\xd3\x19\x94\xe3\x02\x56\x08\x76\x5a\x21\x0c\xe6\x99\xdc\x69\x4d\x61\x50\xf8\x7e\x84\x42\x61\x50\x8e\x30\x28\x47\x18\x94\x23\x0c\xca\x11\x06\x75\xd4\x3b\xad\x16\x06\xeb\xf8\xee\x4e\x7b\xc4\x9d\x16\x55\x41\x1d\x71\xa7\x45\x55\xb0\x12\x6a\xa7\x35\x65\x42\x39\x32\xa1\x84\x4c\x98\x67\x72\xa7\x35\x65\x42\xa1\x4c\x28\x94\x09\xe5\xc8\x84\x72\x64\x42\x39\x32\xa1\xba\xd3\x48\xf5\xc3\x6c\xe7\xb1\x6a\x64\xc7\xd5\x02\xdf\xf8\x50\x1d\xb7\x06\x34\x0e\x65\x1a\x87\x72\x8c\x43\x09\xe3\x30\xcf\xe4\xd6\x60\x1a\x87\xc2\x37\x34\x14\x1a\x87\x72\x8c\x43\x39\xc6\xa1\x1c\xe3\x50\x43\xda\xa9\xd2\xc6\xa1\x06\xd9\xa9\x1a\xc6\x03\x93\x35\xb0\x50\x83\x14\x56\xa1\x96\x28\x53\x4b\x94\xa3\x25\x76\xa1\x25\x76\xfc\x41\xb7\xbb\xa9\x1e\x76\x54\x0f\x3b\xfe\xc4\x80\x1d\xe5\xc4\xee\xa8\x87\xdd\x51\x0f\xbb\xa3\x1e\xf6\x4d\xae\xa1\xbb\x56\x0f\xfb\x46\x6b\xe8\x8e\x6f\x35\xd8\x37\x5a\x43\x77\x54\x0f\xbb\xa9\x1e\x76\xa1\x1e\x7e\xf2\xb7\xff\x1b\x00\x00\xff\xff\xd4\x6b\xa9\xc4\xff\xb4\x00\x00")

func asset19702050JsonBytes() ([]byte, error) {
	return bindataRead(
		_asset19702050Json,
		"asset/1970-2050.json",
	)
}

func asset19702050Json() (*asset, error) {
	bytes, err := asset19702050JsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "asset/1970-2050.json", size: 46335, mode: os.FileMode(438), modTime: time.Unix(1523326065, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetEnJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\x41\x6b\x13\x41\x14\xc7\xef\xfd\x14\x8f\xbd\x78\x11\xbc\x7b\x2b\x5a\xf5\x60\x3c\x98\x22\x78\x9c\xb8\xaf\x99\xc1\xdd\x99\x38\x3b\x63\x2d\x22\xb8\x51\xdb\xd2\xe6\xa0\xd6\xd4\x60\x90\x5c\x12\x34\x12\x95\x44\x83\x10\x0d\xf9\x30\x9b\xd9\xec\xc7\x90\x35\xc1\x99\x11\x3c\xcf\xef\xfd\x78\xff\xff\xbc\xc7\x5b\x00\x00\x81\x79\xf1\x2c\x7f\x3b\x08\x2e\x43\x70\x0b\xf7\xe1\x2e\x12\x79\x21\x81\xab\xe4\x20\xb8\xb8\x7e\xcf\x8f\x5f\x2e\x67\xb3\x2c\xfd\xb2\xa1\xae\x88\x98\xf1\x3a\x88\x3d\xd8\xae\xa3\x0b\x9a\x9f\x33\xd3\x9d\x17\x1f\x3b\x66\x31\xb5\xf8\x35\xa1\x79\x48\x14\x13\xdc\x93\x76\x06\xe6\xf8\xd0\x52\x77\x50\x72\x12\xc1\xce\x03\xcd\xb8\x78\xe4\x91\xad\xaf\x79\x77\xb1\xfc\xf5\x6a\x43\x56\x75\x2d\x51\x4c\x69\x85\x40\x45\xc4\x42\xd7\xf9\xd9\xbc\x6e\x59\x67\x95\x8a\x7d\xe2\xa9\x0e\x27\xf9\xb7\xf6\x7a\xc1\xbf\x61\xf8\xda\x56\xee\x57\xc1\x58\x48\x46\x22\x77\x26\x4b\x17\x59\x3a\xcc\x9a\x27\xd6\x7b\x5d\x22\x72\x94\x07\x3e\x76\xf6\x07\x6b\x3a\x3d\x51\x16\x85\x12\xf9\x3f\x6d\x4e\x7f\x38\x1b\x22\xb9\x54\x21\x92\x71\xbf\xc7\xf1\xd8\x22\x15\xa1\xb9\x22\x8c\x83\x1b\xb4\x3d\x2a\x9e\xa6\x96\xb9\x8d\x49\x03\xef\x29\xd8\x13\x12\x14\xc5\xf2\x5f\x42\x57\xb8\xfa\x70\xea\x95\xbd\xad\x95\x8e\xff\x53\xf7\x72\x7e\x56\x34\x27\x96\xbd\x81\x24\x52\x14\x08\x0f\xa1\xda\x10\x52\xf9\x61\xce\x8f\x4c\xeb\xdc\x89\xac\x23\xa5\xa5\x1f\xe6\xb4\x6f\x4e\xbe\xe7\xcf\x7b\xc5\xe8\xbd\x05\x6f\x92\x9a\x90\xb0\x4b\x09\xbf\x9f\xd4\xd9\xc3\xf2\x9e\xdc\x99\xfe\x70\xf5\xee\xa8\xf8\xd4\x5e\xbd\xe9\x6d\x06\x76\x29\x42\x8d\x49\x45\xcb\xbb\x2b\x33\xee\xc4\x0d\x94\x42\x06\x5b\x4f\x7e\x07\x00\x00\xff\xff\x49\x91\x09\x53\xc7\x02\x00\x00")

func assetEnJsonBytes() ([]byte, error) {
	return bindataRead(
		_assetEnJson,
		"asset/en.json",
	)
}

func assetEnJson() (*asset, error) {
	bytes, err := assetEnJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "asset/en.json", size: 711, mode: os.FileMode(438), modTime: time.Unix(1521952264, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"asset/1970-2050.json": asset19702050Json,
	"asset/en.json":        assetEnJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"asset": &bintree{nil, map[string]*bintree{
		"1970-2050.json": &bintree{asset19702050Json, map[string]*bintree{}},
		"en.json":        &bintree{assetEnJson, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
